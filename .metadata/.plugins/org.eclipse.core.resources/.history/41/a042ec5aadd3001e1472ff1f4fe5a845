package com.rowdy.dino;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.util.List;

import javax.swing.JFrame;
import javax.swing.JPanel;

import com.rowdy.dino.graphics.BattleScene;
import com.rowdy.dino.graphics.Scene;

public class Main {
	
	public static JFrame frame;
	public static JPanel panel;
	public static Dimension frameSize = new Dimension(1000, 700);
	public static long lastTime = System.nanoTime();
	public static long deltaTime = 0;
	
	public static List<Scene> scenes;
	public static BattleScene battleScene;
	
	public static void main(String[] args) {
		battleScene = new BattleScene();
		scenes.add(battleScene);
		
		frame = new JFrame("Rowdy Hacks 24");
		frame.setSize(frameSize);
		frame.setResizable(false);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setLocationRelativeTo(null);
		frame.setVisible(true);
		
		panel = new JPanel() {
            private static final long serialVersionUID = -6875075798821292109L;

			@Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                render(g);
            }
        };
		panel.setSize(frameSize);
		
		frame.add(panel);
		
		loop();
	}
	
	public static void loop() {
		Thread loopThread = new Thread(new Runnable() {
			@Override
			public void run() {
				while(true) {
					long now = System.nanoTime();
					deltaTime = (now - lastTime) / 1e9;
					lastTime = now;
					
					panel.repaint();
					
					try {
						Thread.sleep(16);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				}
			}
		});
		
		loopThread.start();
	}
	
	public static void tick() {
		for(Scene scene : scenes) {
			if(scene.isShowing()) {
				scene.tick();
			}
		}
	}
	
	public static void render(Graphics g) {
		g.setColor(Color.BLACK);
		g.fillRect(0, 0, 100, frameSize.height);
		
		for(Scene scene : scenes) {
			if(scene.isShowing()) {
				scene.render(g);
			}
		}
	}
}
